@model EdgeRealEstate.Entities.MainProject

@{
    ViewBag.Title = "Edit";
    ViewBag.current = "MainProjects";
    Layout = "~/Views/Shared/_AdminPage.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MainProject</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        @Html.HiddenFor(model => model.ImgURL)
    <div class="form-row">
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.MainLandId, "MainLand", htmlAttributes: new { @class = "control-label " })
            @Html.DropDownListFor(model => model.MainLandId, (IEnumerable<SelectListItem>)ViewBag.MainLands, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MainLandId, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Aname, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(model => model.Aname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Aname, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Ename, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(model => model.Ename, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ename, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.TotalLandSize, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(model => model.TotalLandSize, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalLandSize, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.TypesInvestment, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(model => model.TypesInvestment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TypesInvestment, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.MaxLevelForContributions, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(model => model.MaxLevelForContributions, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MaxLevelForContributions, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.ImgURL, htmlAttributes: new { @class = "control-label " })
            @*@Html.EditorFor(model => model.Project.ImgURL, new { htmlAttributes = new { @class = "form-control" } })*@
            @(Html.Kendo().Upload()
            .Name("Image")
            .HtmlAttributes(new { aria_label = "Image" })
            .Multiple(false)
            .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".png" }))
            )
            <div class="demo-hint">You can only upload <strong>GIF</strong>, <strong>JPG</strong>, <strong>PNG</strong> files.</div>
            @Html.ValidationMessageFor(model => model.ImgURL, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.attachedFileAndPic, htmlAttributes: new { @class = "control-label " })
            @*@Html.EditorFor(model => model.Project.attachedFileAndPic, new { htmlAttributes = new { @class = "form-control" } })*@
            @(Html.Kendo().Upload()
            .Name("Files")
            .HtmlAttributes(new { aria_label = "Files" })
            .Multiple(true)
            //.Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".png" }))
            )
            @Html.ValidationMessageFor(model => model.attachedFileAndPic, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.LandNo, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(model => model.LandNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LandNo, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.nots, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(model => model.nots, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nots, "", new { @class = "text-danger" })
        </div>

    </div>

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div class="col-md-12">
    @Html.ActionLink("Back to List", "Index")
</div>
