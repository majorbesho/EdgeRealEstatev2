@model EdgeRealEstate.Entities.Suppliers

@{
    ViewBag.Title = "Edit";
    ViewBag.current = "Suppliers";
    Layout = "~/Views/Shared/_AdminPage.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Suppliers</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Aname, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Aname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Aname, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Ename, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Ename, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ename, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.ResEmp, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.ResEmp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ResEmp, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.tele1, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.tele1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tele1, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Tele2, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Tele2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tele2, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.LikeNo, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.LikeNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LikeNo, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.CompanyCV, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.CompanyCV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyCV, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.limitation, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.limitation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.limitation, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.limitationTime, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.limitationTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.limitationTime, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.CrruntyCompletionRate, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.CrruntyCompletionRate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CrruntyCompletionRate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.imgLogo, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.imgLogo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.imgLogo, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.BankAccount1Name, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.BankAccount1Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankAccount1Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.BankAccount1, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.BankAccount1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankAccount1, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.BankAccountName2, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.BankAccountName2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankAccountName2, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.BankAccount2, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.BankAccount2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankAccount2, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.BankAccountName3, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.BankAccountName3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankAccountName3, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.BankAccount3, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.BankAccount3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankAccount3, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.nots, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.nots, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nots, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div class="col-md-12">
    @Html.ActionLink("Back to List", "Index")
</div>
