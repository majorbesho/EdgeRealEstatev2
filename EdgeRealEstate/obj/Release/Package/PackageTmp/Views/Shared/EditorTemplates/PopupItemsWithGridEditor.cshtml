
@model EdgeRealEstate.Models.ViewModels.Stage_VM
    <div>
        @(Html.HiddenFor(m => m.ID))

        <div class=" col-md-6">
            @Html.LabelFor(m => m.StageId, htmlAttributes: new { @class = "control-label " })
            @Html.DropDownListFor(m => m.StageId, (IEnumerable<SelectListItem>)ViewBag.Stages, null, new { @class = "form-control" })
        </div>
        <div class=" col-md-6">
            @Html.LabelFor(m => m.Duration, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(m => m.Duration, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Duration," ", new { @class = "text-danger" })
        </div>
        <div class=" col-md-6">
            @Html.LabelFor(m => m.Cost, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(m => m.Cost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Cost, "", new { @class = "text-danger" })
        </div>
        

        <h1>Stage MainItems</h1>
        <script>
            function getStageId() {
                var itemUid = $(".k-popup-edit-form").data("uid");
                var dataItem = $("#grid").data("kendoGrid").dataSource.getByUid(itemUid);
                console.log("ID = " + dataItem.ID);
                return { ID: dataItem.ID };
            }
        </script>
        @(Html.Kendo().Grid<EdgeRealEstate.Models.ViewModels.ItemVM>()
           .Name("Items")
           .Columns(columns =>
           {
               columns.ForeignKey(t => t.MainID, (System.Collections.IEnumerable)ViewData["categories"], "ID", "Name").Width(100);
               columns.Bound(t => t.Cost).Width(100).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
               columns.Bound(t => t.Duration).Width(100).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
               columns.Command(c => c.Edit()).Width(50);
               columns.Command(d => d.Destroy()).Width(50);
           })
            .Scrollable()
            .Sortable()
            .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
            .DataSource(datasource => datasource
            .Ajax()
            .Model(m =>
            {
                m.Id(o => o.ID);
                m.Field(f => f.ID).Editable(false);
            })
            .Read(read => read.Action("Items_Read", "Stages").Data("getStageId"))
            .Update(upd => upd.Action("Items_Update", "Stages"))
            .Destroy(dest => dest.Action("Items_Destroy", "Stages"))
            .PageSize(5)
            )
            .Pageable()
        )
    </div>