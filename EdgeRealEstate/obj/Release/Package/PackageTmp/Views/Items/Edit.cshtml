@model EdgeRealEstate.Entities.Items

@{
    ViewBag.Title = "Edit";
    ViewBag.current = "Items";
    Layout = "~/Views/Shared/_AdminPage.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Items</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Aname, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Aname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Aname, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Ename, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Ename, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ename, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.NoOfDaies, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.NoOfDaies, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NoOfDaies, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.AttachedId, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.AttachedId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AttachedId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.DegreeOfExcellenceId, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.DegreeOfExcellenceId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DegreeOfExcellenceId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.HaveItem, htmlAttributes: new { @class = "control-label " })
                <div class="checkbox">
                    @Html.EditorFor(model => model.HaveItem)
                    @Html.ValidationMessageFor(model => model.HaveItem, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Nots, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Nots, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nots, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.UnitsId, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.UnitsId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitsId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Long, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Long, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Long, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.width, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.width, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.width, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.brand, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.brand, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.types, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.types, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.types, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.RelatedWithSuppelyId, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.RelatedWithSuppelyId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RelatedWithSuppelyId, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div class="col-md-12">

    @Html.ActionLink("Back to List", "Index")
</div>
