<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
@{
    /**/

    /**/

    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminPage.cshtml";
}
<h3 style="text-align:center"> تقرير عرض سعر</h3>
@*@using (Html.BeginForm("ShowList", "PurchaseReport"))
{*@
<div class="form-horizontal" dir="rtl">
    <div class="form-group">

        <div class="col-md-2">
            @(Html.Kendo().DatePicker().Name("FromDate").Format("yyyy/MM/dd").HtmlAttributes(new { @class = "form-control" }))
            @Html.ValidationMessage("FromDate", "", new { @class = "text-danger" })
        </div>
        @Html.Label("FromDate", "من تاريخ", htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-2">
            @(Html.Kendo().DatePicker().Name("toDate").Format("yyyy/MM/dd").HtmlAttributes(new { @class = "form-control" }))
            @Html.ValidationMessage("toDate", "", new { @class = "text-danger" })
        </div>
        @Html.Label("toDate", "الى تاريخ", htmlAttributes: new { @class = "control-label col-md-1" })

        <div class="col-md-2">
            @(Html.Kendo().ComboBox()
               .Name("FromCust")
               .Placeholder("اختر")
               //.DataTextField("barCodeUnv")
               .DataTextField("ARName")
               //.Template("#= barCodeUnv # - #= arName #")
               .DataValueField("Id")
               .Filter("contains")
               .MinLength(1)
               .HtmlAttributes(new { style = "padding-bottom:10px;" })
               //.Events(e => e.Change("onComboChange"))
               .DataSource(source =>
               {
                   source.Read(read =>
                   {
                       read.Action("ServerFiltering_GetCustomers", "PricesOffersReport");
                   })
               .ServerFiltering(true);
               })
            )
        </div>
        @Html.Label("FromCust", " من عميل :", htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-2">
            @(Html.Kendo().ComboBox()
               .Name("toCust")
               .Placeholder("اختر")
               //.DataTextField("barCodeUnv")
               .DataTextField("ARName")
               //.Template("#= barCodeUnv # - #= arName #")
               .DataValueField("Id")
               .Filter("contains")
               .MinLength(1)
               .HtmlAttributes(new { style = "padding-bottom:10px;" })
               //.Events(e => e.Change("onComboChange"))
               .DataSource(source =>
               {
                   source.Read(read =>
                   {
                       read.Action("ServerFiltering_GetCustomers", "PricesOffersReport");
                   })
               .ServerFiltering(true);
               })
            )
        </div>
        @Html.Label("Cust", " الى عميل :", htmlAttributes: new { @class = "control-label col-md-1" })
    </div>
    <div class="form-group">
        <div class="col-md-2">
            @(Html.Kendo().NumericTextBox().Name("FrombillId").HtmlAttributes(new { @class = "form-control" }))
            @Html.ValidationMessage("FrombillId", "", new { @class = "text-danger" })
        </div>
        @Html.Label("FrombillId", "من رقم", htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-2">
            @(Html.Kendo().NumericTextBox().Name("tobillId").HtmlAttributes(new { @class = "form-control" }))
            @Html.ValidationMessage("tobillId", "", new { @class = "text-danger" })
        </div>
        @Html.Label("tobillId", "الى رقم", htmlAttributes: new { @class = "control-label col-md-1" })

        <div class="col-md-2">
            @(Html.Kendo().ComboBox()
               .Name("FromSalesMan")
               .Placeholder("اختر")
               //.DataTextField("barCodeUnv")
               .DataTextField("ARName")
               //.Template("#= barCodeUnv # - #= arName #")
               .DataValueField("Id")
               .Filter("contains")
               .MinLength(1)
               .HtmlAttributes(new { style = "padding-bottom:10px;" })
               //.Events(e => e.Change("onComboChange"))
               .DataSource(source =>
               {
                   source.Read(read =>
                   {
                       read.Action("ServerFiltering_GetSalesMan", "PricesOffersReport");
                   })
               .ServerFiltering(true);
               })
            )
        </div>
        @Html.Label("FromSalesMan", " من مندوب :", htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-2">
            @(Html.Kendo().ComboBox()
               .Name("toSalesMan")
               .Placeholder("اختر")
               //.DataTextField("barCodeUnv")
               .DataTextField("ARName")
               //.Template("#= barCodeUnv # - #= arName #")
               .DataValueField("Id")
               .Filter("contains")
               .MinLength(1)
               .HtmlAttributes(new { style = "padding-bottom:10px;" })
               //.Events(e => e.Change("onComboChange"))
               .DataSource(source =>
               {
                   source.Read(read =>
                   {
                       read.Action("ServerFiltering_GetSalesMan", "PricesOffersReport");
                   })
               .ServerFiltering(true);
               })
            )
        </div>
        @Html.Label("toSalesMan", " الى مندوب :", htmlAttributes: new { @class = "control-label col-md-1" })
    </div>
    @*<div class="form-group" dir="rtl">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn-primary" value="طباعة التقرير" style="text-align:center;background-color: steelblue;color: white;cursor: pointer;" />
            <br />
            <br />
        </div>
    </div>*@
</div>
<br />
@*}*@
@(Html.Kendo().Grid<EdgeRealEstate.Models.ViewModels.ItemMoveViewModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.addDate).ClientTemplate("#= kendo.toString(addDate, \"yyyy/MM/dd\") #")
        .ClientFooterTemplate("الاجمالى").Title("تاريخ العرض");

        columns.Bound(p => p.CustARName)
       .ClientTemplate((@Html.ActionLink("#=CustARName#", "Details", "Customer"
       , new { id = "#=custId#" }, null).ToHtmlString()));

        columns.Bound(p => p.salesManARName)
    .ClientTemplate((@Html.ActionLink("#=salesManARName#", "Details", "Employee"
    , new { id = "#=salesManId#" }, null).ToHtmlString()));

        columns.Bound(p => p.billId).Title("رقم عرض السعر")
            .ClientTemplate((@Html.ActionLink("#=billId#", "Index", "PricesOffers"
        , new { id = "#=billId#" }, null).ToHtmlString())).ClientFooterTemplate("#=count#");

        columns.Bound(p => p.rowTotal).ClientFooterTemplate("#=sum#");
        //columns.Bound(p => p.disNo).ClientFooterTemplate("#=sum#");
        //columns.Bound(p => p.net).ClientFooterTemplate("#=sum#");
    })
    .Pageable()
    .Sortable()
    .Scrollable()
    .HtmlAttributes(new { @class = "k-rtl" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.id);
            model.Field(p => p.id).Editable(false);
        })
        .PageSize(20)
                                .Aggregates(aggregates =>
                                {
                                    aggregates.Add(p => p.billId).Count();
                                    aggregates.Add(p => p.rowTotal).Sum();
                                    //aggregates.Add(p => p.disNo).Sum();
                                    //aggregates.Add(p => p.tax).Sum();
                                    //aggregates.Add(p => p.net).Sum();
                                })
        .Read(read => read.Action("EditingCustom_Read", "PricesOffersReport").Data("getmasterdata"))
    )
)
<script>
        $('#toCust').change(function () {
        $("#grid").data("kendoGrid").dataSource.read(read => read.Action("EditingCustom_Read", "PricesOffersReport").Data("getmasterdata"));
            $("#grid").css("display", "block");
        });
      $('#toDate').change(function () {
        $("#grid").data("kendoGrid").dataSource.read(read => read.Action("EditingCustom_Read", "PricesOffersReport").Data("getmasterdata"));
            $("#grid").css("display", "block");
        });
           $('#toSalesMan').change(function () {
        $("#grid").data("kendoGrid").dataSource.read(read => read.Action("EditingCustom_Read", "PricesOffersReport").Data("getmasterdata"));
            $("#grid").css("display", "block");
        });
      $('#tobillId').change(function () {
        $("#grid").data("kendoGrid").dataSource.read(read => read.Action("EditingCustom_Read", "PricesOffersReport").Data("getmasterdata"));
            $("#grid").css("display", "block");
        });
    function getmasterdata() {

        var vFromCust = $("#FromCust").val();
        var vtoCust = $("#toCust").val();
        var vFromDate = $("#FromDate").val();
        var vtoDate = $("#toDate").val();
        var vFromSalesMan = $("#FromSalesMan").val();
        var vtoSalesMan = $("#toSalesMan").val();
        var vFrombillId = $("#FrombillId").val();
        var vtobillId = $("#tobillId").val();
        return {
            "FromCust": vFromCust,
            "toCust": vtoCust,
            "FromDate": vFromDate,
            "toDate": vtoDate,
            "FromSalesMan": vFromSalesMan,
            "toSalesMan": vtoSalesMan,
            "FrombillId": vFrombillId,
            "tobillId": vtobillId,
           
        };
    }
</script>


