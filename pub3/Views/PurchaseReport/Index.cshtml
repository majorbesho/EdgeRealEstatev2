<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <style>
        body {
            font-family: "DejaVu Serif";
            font-size: 12px;
        }

        .page-template {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
        }

        .page-template .header {
            position: absolute;
            top: 30px;
            left: 30px;
            right: 30px;

            border-bottom: 1px solid #888;

            text-align: center;
            font-size: 18px;
        }

        .page-template .footer {
            position: absolute;
            bottom: 30px;
            left: 30px;
            right: 30px;
        }
    </style>
@{
    /**/

    /**/

    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminPage.cshtml";
}
<h3 style="text-align:center"> تقرير المشتريات</h3>
    @*<script type="text/x-kendo-template" id="toolbar-template">
    	<button type="button" class="k-button" id="printGrid">طباعة التقرير</button>
    </script>*@
@*@using (Html.BeginForm("ShowList", "PurchaseReport"))
{*@



    <script type="x/kendo-template" id="page-template">
        <div class="page-template">
            <div class="header">
                <div class="row">
                    <div class="col-md-4">
                        <p style="font-weight:bold">Edge Software Company.</p>
                    </div>
                </div>
            </div>
            <div class="footer">
                <div style="float: right">Page #: pageNum # of #: totalPages #</div>
            </div>
        </div>
    </script>



<div class="form-horizontal" dir="rtl">
    <div class="form-group">

        <div class="col-md-2">
            @(Html.Kendo().DatePicker().Name("FromDate").Format("yyyy/MM/dd").HtmlAttributes(new { @class = "form-control" }))
            @Html.ValidationMessage("FromDate", "", new { @class = "text-danger" })
        </div>
        @Html.Label("FromDate", "من تاريخ", htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-2">
            @(Html.Kendo().DatePicker().Name("toDate").Format("yyyy/MM/dd").HtmlAttributes(new { @class = "form-control" }))
            @Html.ValidationMessage("toDate", "", new { @class = "text-danger" })
        </div>
        @Html.Label("toDate", "الى تاريخ", htmlAttributes: new { @class = "control-label col-md-1" })

        <div class="col-md-2">
            @(Html.Kendo().ComboBox()
               .Name("FromCust")
               .Placeholder("اختر")
               //.DataTextField("barCodeUnv")
               .DataTextField("ARName")
               //.Template("#= barCodeUnv # - #= arName #")
               .DataValueField("Id")
               .Filter("contains")
               .MinLength(1)
               .HtmlAttributes(new { style = "padding-bottom:10px;" })
               //.Events(e => e.Change("onComboChange"))
               .DataSource(source =>
               {
                   source.Read(read =>
                   {
                       read.Action("ServerFiltering_GetCustomers", "PurchaseReport");
                   })
               .ServerFiltering(true);
               })
            )
        </div>
        @Html.Label("FromCust", " من عميل :", htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-2">
            @(Html.Kendo().ComboBox()
               .Name("toCust")
               .Placeholder("اختر")
               //.DataTextField("barCodeUnv")
               .DataTextField("ARName")
               //.Template("#= barCodeUnv # - #= arName #")
               .DataValueField("Id")
               .Filter("contains")
               .MinLength(1)
               .HtmlAttributes(new { style = "padding-bottom:10px;" })
               //.Events(e => e.Change("onComboChange"))
               .DataSource(source =>
               {
                   source.Read(read =>
                   {
                       read.Action("ServerFiltering_GetCustomers", "PurchaseReport");
                   })
               .ServerFiltering(true);
               })
            )
        </div>
        @Html.Label("Cust", " الى عميل :", htmlAttributes: new { @class = "control-label col-md-1" })
    </div>
    <div class="form-group">
        <div class="col-md-2">
            @(Html.Kendo().NumericTextBox().Name("FrombillId").HtmlAttributes(new { @class = "form-control" }))
            @Html.ValidationMessage("FrombillId", "", new { @class = "text-danger" })
        </div>
        @Html.Label("FrombillId", "من رقم", htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-2">
            @(Html.Kendo().NumericTextBox().Name("tobillId").HtmlAttributes(new { @class = "form-control" }))
            @Html.ValidationMessage("tobillId", "", new { @class = "text-danger" })
        </div>
        @Html.Label("tobillId", "الى رقم", htmlAttributes: new { @class = "control-label col-md-1" })

        <div class="col-md-2">
            @(Html.Kendo().ComboBox()
               .Name("FromSalesMan")
               .Placeholder("اختر")
               //.DataTextField("barCodeUnv")
               .DataTextField("ARName")
               //.Template("#= barCodeUnv # - #= arName #")
               .DataValueField("Id")
               .Filter("contains")
               .MinLength(1)
               .HtmlAttributes(new { style = "padding-bottom:10px;" })
               //.Events(e => e.Change("onComboChange"))
               .DataSource(source =>
               {
                   source.Read(read =>
                   {
                       read.Action("ServerFiltering_GetSalesMan", "PurchaseReport");
                   })
               .ServerFiltering(true);
               })
            )
        </div>
        @Html.Label("FromSalesMan", " من مندوب :", htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-2">
            @(Html.Kendo().ComboBox()
               .Name("toSalesMan")
               .Placeholder("اختر")
               //.DataTextField("barCodeUnv")
               .DataTextField("ARName")
               //.Template("#= barCodeUnv # - #= arName #")
               .DataValueField("Id")
               .Filter("contains")
               .MinLength(1)
               .HtmlAttributes(new { style = "padding-bottom:10px;" })
               //.Events(e => e.Change("onComboChange"))
               .DataSource(source =>
               {
                   source.Read(read =>
                   {
                       read.Action("ServerFiltering_GetSalesMan", "PurchaseReport");
                   })
               .ServerFiltering(true);
               })
            )
        </div>
        @Html.Label("toSalesMan", " الى مندوب :", htmlAttributes: new { @class = "control-label col-md-1" })
    </div>
    @*<div class="form-group" dir="rtl">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn-primary" value="طباعة التقرير" style="text-align:center;background-color: steelblue;color: white;cursor: pointer;" />
            <br />
            <br />
        </div>
    </div>*@
</div>
<br />
@*}*@
 @*<button id="btnExport" class="pull-right" ><span class="k-icon k-i-pdf"></span>تصدير PDF</button>*@
<br />
<br />

@(Html.Kendo().Grid<EdgeRealEstate.Models.ViewModels.ItemMoveViewModel>()
    .Name("grid")
    .ToolBar(toolbar =>
    {
        toolbar.Custom().Text("عرض وطباعة").HtmlAttributes(new { id = "printGrid" });
        toolbar.Pdf().Text("تصدير PDF");
    })
    .Pdf(pdf => pdf
            .AllPages()
            .AvoidLinks()
            .PaperSize("A4")
            .Scale(0.8)
            .Margin("2cm", "1cm", "1cm", "1cm")
            .Landscape()
            .RepeatHeaders()
            .TemplateId("page-template")
            .FileName("Edge-Report.pdf")
        //.ProxyURL(Url.Action("Pdf_Export_Save", "Grid"))
        )
    .Columns(columns =>
    {
        columns.Bound(p => p.addDate).ClientTemplate("#= kendo.toString(addDate, \"yyyy/MM/dd\") #")
        .ClientFooterTemplate("الاجمالى");

        columns.Bound(p => p.CustARName)
       .ClientTemplate((@Html.ActionLink("#=CustARName#", "Details", "Customer"
       , new { id = "#=custId#" }, null).ToHtmlString()));

        columns.Bound(p => p.salesManARName)
    .ClientTemplate((@Html.ActionLink("#=salesManARName#", "Details", "Employee"
    , new { id = "#=salesManId#" }, null).ToHtmlString()));

        columns.Bound(p => p.billId)
            .ClientTemplate((@Html.ActionLink("#=billId#", "Index", "BillPurchases"
        , new { id = "#=billId#" }, null).ToHtmlString())).ClientFooterTemplate("#=count#");

        columns.Bound(p => p.rowTotal).ClientFooterTemplate("#=sum#");
        columns.Bound(p => p.disNo).ClientFooterTemplate("#=sum#");
        columns.Bound(p => p.net).ClientFooterTemplate("#=sum#");
    })
    .Pageable()
    .Sortable()
    .Groupable()
    .Scrollable()
    .HtmlAttributes(new { @class = "k-rtl" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.id);
            model.Field(p => p.id).Editable(false);
        })
        .PageSize(20)
                                .Aggregates(aggregates =>
                                {
                                    aggregates.Add(p => p.billId).Count();
                                    aggregates.Add(p => p.rowTotal).Sum();
                                    aggregates.Add(p => p.disNo).Sum();
                                    aggregates.Add(p => p.tax).Sum();
                                    aggregates.Add(p => p.net).Sum();
                                })
        .Read(read => read.Action("EditingCustom_Read", "PurchaseReport").Data("getmasterdata"))
    )
)


<script>

    $('#toCust').change(function () {
            
        $("#grid").data("kendoGrid").dataSource.read(read => read.Action("EditingCustom_Read", "PurchaseReport").Data("getmasterdata"));
            $("#grid").css("display", "block");
        });
      $('#toDate').change(function () {
        $("#grid").data("kendoGrid").dataSource.read(read => read.Action("EditingCustom_Read", "PurchaseReport").Data("getmasterdata"));
            $("#grid").css("display", "block");
        });
           $('#toSalesMan').change(function () {
        $("#grid").data("kendoGrid").dataSource.read(read => read.Action("EditingCustom_Read", "PurchaseReport").Data("getmasterdata"));
            $("#grid").css("display", "block");
        });
      $('#tobillId').change(function () {
        $("#grid").data("kendoGrid").dataSource.read(read => read.Action("EditingCustom_Read", "PurchaseReport").Data("getmasterdata"));
            $("#grid").css("display", "block");
        });
    function getmasterdata() {

        var vFromCust = $("#FromCust").val();
        var vtoCust = $("#toCust").val();
        var vFromDate = $("#FromDate").val();
        var vtoDate = $("#toDate").val();
        var vFromSalesMan = $("#FromSalesMan").val();
        var vtoSalesMan = $("#toSalesMan").val();
        var vFrombillId = $("#FrombillId").val();
        var vtobillId = $("#tobillId").val();
        return {
            "FromCust": vFromCust,
            "toCust": vtoCust,
            "FromDate": vFromDate,
            "toDate": vtoDate,
            "FromSalesMan": vFromSalesMan,
            "toSalesMan": vtoSalesMan,
            "FrombillId": vFrombillId,
            "tobillId": vtobillId,
           
        };
    }
</script>

<script>
    function printGrid() {
        var gridElement = $('#grid'),
            printableContent = '',
            win = window.open('', '', 'width=800, height=500'),
            doc = win.document.open();

        var htmlStart =
            '<!DOCTYPE html>' +
            '<html lang="ar">' +
            '<head>' +
            '<meta charset="utf-8" />' +
            '<title>Kendo UI Grid</title>' +
            '<link href="../Content/Kendo/kendo.common.min.css" rel="stylesheet" />'+
            '<style>' +
            'html { font: 11pt sans-serif; }' +
            '.k-grid { border-top-width: 0; }' +
            '.k-grid, .k-grid-content { height: auto !important; }' +
            '.k-grid-content { overflow: visible !important; }' +
            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
            '.k-grouping-header { display: none; }' +
            '.k-pager-wrap { display: none; color:black;}' +
            'thead tr th a{ font-weight:bold; }' +
            '@@media print {#printid {display: none;}}'+
            '</style>' +
            '</head>' +
            '<body>';
        

        var PageHeader ='<button id="printid" onclick="window.print()" style="background-color:red;">ابدا الطباعة</button>'+
                        '<p style="text-align:center;font-size:18px;display:block;font-weight:bold;">Edge Company</p>' +
                        '<p style="text-align:center;font-size:14px;display:block">Elmajed Real State</p>' 
                    ;
        var htmlEnd =
            '</body>' +
            '</html>';

        var gridHeader = gridElement.children('.k-grid-header');
        if (gridHeader[0]) {
            var thead = gridHeader.find('thead').clone().addClass('k-grid-header');
            printableContent = gridElement
                .clone()
                .children('.k-grid-header').remove()
                .end()
                .children('.k-grid-content')
                .find('table')
                .first()
                .children('tbody').before(thead)
                .end()
                .end()
                .end()
                .end()[0].outerHTML;
        } else {
            printableContent = gridElement.clone()[0].outerHTML;
        }

        doc.write(htmlStart + PageHeader + printableContent + htmlEnd);
        doc.close();
    }

    $(document).ready(function () {

        $('#printGrid').click(function () {
            printGrid();
        });

    });
</script>
<script>
    $("#btnExport").kendoButton(
        {
            click: function () {
                $("#grid").data("kendoGrid").saveAsPDF();
            }
        });

    //$("#grid").kendoGrid({
    //    pdf: {
    //        allPages: true,
    //        paperSize: "A4",
    //        margin: { top: "3cm", right: "1cm", bottom: "1cm", left: "1cm" },
    //        landscape: true,
    //        //template: $("#page-template").html()
    //    }
    //});
</script>